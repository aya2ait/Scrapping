name: eCommerce Intelligence Pipeline CI/CD

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_NAMESPACE: ${{ github.repository_owner }}
  KUBEFLOW_HOST: ${{ secrets.KUBEFLOW_HOST }}
  KUBEFLOW_USERNAME: ${{ secrets.KUBEFLOW_USERNAME }}
  KUBEFLOW_PASSWORD: ${{ secrets.KUBEFLOW_PASSWORD }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install kfp==2.0.0 pytest
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        pytest -xvs tests/
        
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push Docker images
      run: |
        # Build base image
        docker build --target base -t $DOCKER_REGISTRY/$DOCKER_NAMESPACE/ecommerce-base:latest .
        docker push $DOCKER_REGISTRY/$DOCKER_NAMESPACE/ecommerce-base:latest
        
        # Build component images
        docker build --target data-collection -t $DOCKER_REGISTRY/$DOCKER_NAMESPACE/ecommerce-data-collection:latest .
        docker push $DOCKER_REGISTRY/$DOCKER_NAMESPACE/ecommerce-data-collection:latest
        
        docker build --target data-storage -t $DOCKER_REGISTRY/$DOCKER_NAMESPACE/ecommerce-data-storage:latest .
        docker push $DOCKER_REGISTRY/$DOCKER_NAMESPACE/ecommerce-data-storage:latest
        
        docker build --target analysis -t $DOCKER_REGISTRY/$DOCKER_NAMESPACE/ecommerce-analysis:latest .
        docker push $DOCKER_REGISTRY/$DOCKER_NAMESPACE/ecommerce-analysis:latest
        
    - name: Compile Kubeflow Pipeline
      run: |
        python pipeline_definition.py
        
    - name: Deploy to Kubeflow
      run: |
        pip install kfp==2.0.0
        python -c "
        import kfp
        import json
        import os
        
        # Create client
        client = kfp.Client(
            host=os.environ['KUBEFLOW_HOST'],
            username=os.environ['KUBEFLOW_USERNAME'],
            password=os.environ['KUBEFLOW_PASSWORD']
        )
        
        # Upload pipeline
        pipeline = client.upload_pipeline(
            pipeline_package_path='ecommerce_pipeline.yaml',
            pipeline_name='ecommerce-intelligence-pipeline'
        )
        
        # Create experiment if it doesn't exist
        try:
            experiment = client.get_experiment(experiment_name='ecommerce-intelligence')
        except:
            experiment = client.create_experiment(name='ecommerce-intelligence')
        
        # Create run
        run = client.run_pipeline(
            experiment_id=experiment.id,
            job_name='ecommerce-intelligence-run',
            pipeline_id=pipeline.id,
            params={
                'mongodb_config': json.dumps({
                    'connection_string': os.environ['MONGODB_URI'],
                    'database': 'ecommerce_products',
                    'collection': 'products'
                }),
                'stores_config': os.environ['STORES_CONFIG'],
                'analysis_config': os.environ['ANALYSIS_CONFIG']
            }
        )
        
        print(f'Pipeline run created: {run.id}')
        "
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        STORES_CONFIG: ${{ secrets.STORES_CONFIG }}
        ANALYSIS_CONFIG: ${{ secrets.ANALYSIS_CONFIG }}